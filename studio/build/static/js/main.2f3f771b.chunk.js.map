{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","traxState","setTraxState","modInfo","setModInfo","nstRef","useRef","getModInfo","current","kGetModInfoCommand","Uint8Array","console","log","sendBuffer","useEffect","wsUrlParam","URLSearchParams","window","location","search","get","wsUrl","nstClient","NstrumentaClient","apiKey","projectId","addListener","subscribe","message","type","frameId","data","TextDecoder","decode","slice","JSON","stringify","init","className","Typography","Button","variant","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OA+EeA,MA1Ef,WACE,MAAkCC,qBAAlC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAASC,mBAETC,EAAa,WACjB,GAAKF,EAAOG,QAAZ,CAEA,IAAMC,EAAqB,IAAIC,WAAW,CAAC,EAAM,EAAM,EAAM,IAAM,MACnEC,QAAQC,IAAI,sBAAuBH,GACnCJ,EAAOG,QAAQK,WAAW,UAAWJ,KAmDvC,OAhDAK,qBAAU,WAER,IAAMC,EAAa,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,SAE7DC,EAAQN,GAA0B,sBAElCO,EAAY,IAAIC,mBAAiB,CACrCC,OAAQ,GACRC,UAAW,GACXJ,UAGFhB,EAAOG,QAAUc,EAEjBX,QAAQC,IAAI,iBAAkBS,GAE9BC,EAAUI,YAAY,QAAQ,WAC5Bf,QAAQC,IAAI,mBACZU,EAAUK,UAAU,qBAAqB,SAACC,GAExC,GADAjB,QAAQC,IAAI,oBAAqBgB,GAE1B,SADCA,EAAQC,KAEZ3B,EAAa,QACbK,OAGNe,EAAUK,UAAU,SAAS,SAACC,GACV,SAAd3B,GAAsBC,EAAa,QACvCS,QAAQC,IAAI,QAASgB,GACrB,IAAME,EAAUF,EAAQG,KAAK,GAC7B,GACO,IADCD,EACN,CACE,IAAM3B,GAAU,IAAI6B,aAAcC,OAChC,IAAIvB,WAAWkB,EAAQG,KAAKG,MAAM,GAAI,KAExCvB,QAAQC,IAAIuB,KAAKC,UAAUR,GAAUzB,GACrCC,EAAWD,QAGXQ,QAAQC,IAAR,8BAAmCkB,GAAWF,SAKtDN,EAAUe,SAET,IAGD,qBAAKC,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASnC,EAArC,yBAGCJ,QCpETwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2f3f771b.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { NstrumentaClient } from \"nstrumenta\";\nimport { Button, Typography } from \"@mui/material\";\n\nfunction App() {\n  const [traxState, setTraxState] = useState<string>();\n  const [modInfo, setModInfo] = useState<string>();\n\n  const nstRef = useRef<NstrumentaClient>();\n\n  const getModInfo = () => {\n    if (!nstRef.current) return;\n    // kGetModInfo\n    const kGetModInfoCommand = new Uint8Array([0x00, 0x05, 0x01, 0xef, 0xd4]);\n    console.log(\"sending kGetModInfo\", kGetModInfoCommand);\n    nstRef.current.sendBuffer(\"trax-in\", kGetModInfoCommand);\n  };\n\n  useEffect(() => {\n    //get wsUrl from params if present\n    const wsUrlParam = new URLSearchParams(window.location.search).get(\"wsUrl\");\n\n    const wsUrl = wsUrlParam ? wsUrlParam : \"ws://localhost:8088\";\n\n    const nstClient = new NstrumentaClient({\n      apiKey: \"\",\n      projectId: \"\",\n      wsUrl,\n    });\n\n    nstRef.current = nstClient;\n\n    console.log(\"connecting to \", wsUrl);\n\n    nstClient.addListener(\"open\", () => {\n      console.log(\"nst client open\");\n      nstClient.subscribe(\"serialport-events\", (message) => {\n        console.log(\"serialport-events\", message);\n        switch (message.type) {\n          case \"open\":\n            setTraxState(\"open\");\n            getModInfo();\n        }\n      });\n      nstClient.subscribe(\"trax2\", (message) => {\n        if (traxState !== \"open\") setTraxState(\"open\");\n        console.log(\"trax2\", message);\n        const frameId = message.data[2];\n        switch (frameId) {\n          case 0x02:\n            const modInfo = new TextDecoder().decode(\n              new Uint8Array(message.data.slice(3, -2))\n            );\n            console.log(JSON.stringify(message), modInfo);\n            setModInfo(modInfo);\n            break;\n          default:\n            console.log(`unhandled frame ID: ${frameId}`, message);\n            break;\n        }\n      });\n    });\n    nstClient.init();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Typography>\n        <Button variant=\"contained\" onClick={getModInfo}>\n          kGetModInfo\n        </Button>\n        {modInfo}\n      </Typography>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}