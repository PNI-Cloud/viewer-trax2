{"version":3,"sources":["../../../src/shared/index.ts","DataBuffer.ts","App.tsx","index.tsx","../../../src/lib/busMessage.ts","../../../src/lib/client.ts","../../../src/lib/index.ts"],"names":["DataBuffer","maxLength","buffer","partial","this","Uint8Array","data","length","packet","validate","undefined","extended","push","shift","App","useState","traxState","setTraxState","modInfo","setModInfo","traxMessage","setTraxMessage","dataRef","useRef","useReducer","x","forceUpdate","nstRef","traxWithCrc16","index","crc","i","from","toHexString","byteArray","map","toString","padStart","join","useEffect","wsUrlParam","URLSearchParams","window","location","search","get","wsUrl","nstClient","NstrumentaClient","apiKey","current","console","log","addListener","subscribe","message","type","add","frameId","TextDecoder","decode","slice","JSON","stringify","init","className","Grid","container","spacing","item","xs","Button","variant","onClick","kGetModInfoCommand","sendBuffer","TextField","id","label","onChange","e","target","value","numberArray","replace","split","str","Number","tryParse","bytes","style","width","whiteSpace","reverse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26d09b9a.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.endpoints = exports.NstrumentaClient = exports.makeBusMessageFromJsonObject = exports.deserializeWireMessage = exports.deserializeBlob = exports.BusMessage = void 0;\nvar busMessage_1 = require(\"../lib/busMessage\");\nObject.defineProperty(exports, \"BusMessage\", { enumerable: true, get: function () { return busMessage_1.BusMessage; } });\nObject.defineProperty(exports, \"deserializeBlob\", { enumerable: true, get: function () { return busMessage_1.deserializeBlob; } });\nObject.defineProperty(exports, \"deserializeWireMessage\", { enumerable: true, get: function () { return busMessage_1.deserializeWireMessage; } });\nObject.defineProperty(exports, \"makeBusMessageFromJsonObject\", { enumerable: true, get: function () { return busMessage_1.makeBusMessageFromJsonObject; } });\nvar client_1 = require(\"../lib/client\");\nObject.defineProperty(exports, \"NstrumentaClient\", { enumerable: true, get: function () { return client_1.NstrumentaClient; } });\nconst BASE_URL = process.env.LOCAL ? 'http://localhost:8080/' : 'https://us-central1-macro-coil-194519.cloudfunctions.net/';\nexports.endpoints = {\n    GET_MACHINES: `${BASE_URL}/getMachines`,\n    GET_SIGNED_UPLOAD_URL: `${BASE_URL}/getSignedUploadUrl`,\n    GET_TOKEN: `${BASE_URL}/getToken`,\n    VERIFY_TOKEN: `${BASE_URL}/verifyToken`,\n};\n//# sourceMappingURL=index.js.map","export default class DataBuffer {\n    maxLength: number;\n    public buffer: Array<Uint8Array>;\n    partial: Uint8Array;\n    constructor(maxLength: number) {\n        this.maxLength = maxLength;\n        this.buffer = [];\n        this.partial = new Uint8Array();\n    }\n\n    validate(data: Uint8Array) {\n        if (data[1] === data.length) {\n            return true;\n        }\n    }\n\n    add(data: Uint8Array) {\n        let packet = this.validate(data) ? data : undefined;\n        if (!packet) {\n            const extended = new Uint8Array([...this.partial, ...data]);\n            if (this.validate(extended)) {\n                packet = extended;\n            }\n        }\n        if (!packet) { this.partial = data; return }\n\n        this.buffer.push(packet);\n        while (this.buffer.length > this.maxLength) {\n            this.buffer.shift();\n        }\n    }\n}","import { Button, Grid, TextField } from \"@mui/material\";\nimport { NstrumentaClient } from \"nstrumenta\";\nimport React, {\n  ChangeEventHandler,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\";\nimport \"./App.css\";\nimport DataBuffer from \"./DataBuffer\";\n// CRC implementation from TRAX2 User Manual\n// function(CRC(void * data, UInt32 len) {\n//   UInt8 * dataPtr = (UInt8 *)data;\n//   UInt32 index = 0;\n//   // Update the CRC for transmitted and received data using // the CCITT 16bit algorithm (X^16 + X^12 + X^5 + 1). UInt16 crc = 0;\n//   while(len--)\n//   {\n//   crc = (unsigned char)(crc >> 8) | (crc << 8);\n//   crc ^= dataPtr[index++];\n//   crc ^= (unsigned char)(crc & 0xff) >> 4;\n//   crc ^= (crc << 8) << 4;`\n//   crc ^= ((crc & 0xff) << 4) << 1;\n//   }\n//   return crc;\n//   }\n\nfunction App() {\n  const [traxState, setTraxState] = useState<string>();\n  const [modInfo, setModInfo] = useState<string>();\n  const [traxMessage, setTraxMessage] = useState<Uint8Array>();\n\n  const dataRef = useRef<DataBuffer>();\n  // store data in dataRef and forceUpdate for re-render\n  // eslint-disable-next-line\n  const [_, forceUpdate] = useReducer((x: number) => x + 1, 0);\n  const nstRef = useRef<NstrumentaClient>();\n\n  const traxWithCrc16 = (data: number[]): Uint8Array => {\n    let index = 0;\n    let crc = 0;\n    for (let i = data.length - 1; i >= 0; i--) {\n      crc = (crc >> 8) | (crc << 8);\n      crc ^= data[index++];\n      crc ^= (crc & 0xff) >> 4;\n      crc ^= (crc << 8) << 4;\n      crc ^= ((crc & 0xff) << 4) << 1;\n    }\n    return Uint8Array.from([\n      ...data,\n      (crc & 0xff00) >> 8,\n      crc & 0x00ff,\n    ] as number[]);\n  };\n\n  function toHexString(byteArray: Uint8Array) {\n    return [...byteArray].map((x) => x.toString(16).padStart(2, \"0\")).join(\" \");\n  }\n\n  const getModInfo = () => {\n    if (!nstRef.current) return;\n    // kGetModInfo\n    const kGetModInfoCommand = traxWithCrc16([0x00, 0x05, 0x01]);\n    console.log(\"sending kGetModInfo\", kGetModInfoCommand);\n    nstRef.current.sendBuffer(\"trax-in\", kGetModInfoCommand);\n  };\n\n  const sendBytes = (bytes: Uint8Array) => {\n    if (!nstRef.current) return;\n    nstRef.current.sendBuffer(\"trax-in\", bytes);\n  };\n\n  const updateMessage: ChangeEventHandler<\n    HTMLInputElement | HTMLTextAreaElement\n  > = (e) => {\n    console.log(e.target.value);\n    try {\n      const numberArray = e.target.value\n        .replace(\"[\", \"\")\n        .replace(\"]\", \"\")\n        .split(\",\")\n        .map((str) => Number(str));\n\n      const tryParse = traxWithCrc16(numberArray);\n      console.log(tryParse);\n      setTraxMessage(tryParse);\n    } catch {}\n  };\n\n  useEffect(() => {\n    //get wsUrl from params if present\n    const wsUrlParam = new URLSearchParams(window.location.search).get(\"wsUrl\");\n\n    const wsUrl = wsUrlParam ? wsUrlParam : \"ws://localhost:8088\";\n\n    const nstClient = new NstrumentaClient({\n      apiKey: \"f4c560a4-6558-4090-b827-9070c6c4fb3d\",\n      wsUrl,\n    });\n\n    nstRef.current = nstClient;\n\n    dataRef.current = new DataBuffer(100);\n\n    console.log(\"connecting to \", wsUrl);\n\n    nstClient.addListener(\"open\", () => {\n      console.log(\"nst client open\");\n      nstClient.subscribe(\"serialport-events\", (message) => {\n        console.log(\"serialport-events\", message);\n        switch (message.type) {\n          case \"open\":\n            setTraxState(\"open\");\n        }\n      });\n      nstClient.subscribe(\"trax2\", (message) => {\n        if (traxState !== \"open\") setTraxState(\"open\");\n\n        dataRef.current?.add(new Uint8Array(message.data));\n        forceUpdate();\n\n        console.log(\"trax2\", message);\n        const frameId = message.data[2];\n        switch (frameId) {\n          case 0x02:\n            const modInfo = new TextDecoder().decode(\n              new Uint8Array(message.data.slice(3, -2))\n            );\n            console.log(JSON.stringify(message), modInfo);\n            setModInfo(modInfo);\n            break;\n          case 0x05:\n            console.log(\"data\");\n            break;\n\n          default:\n            console.log(`unhandled frame ID: ${frameId}`, message);\n            break;\n        }\n      });\n    });\n    nstClient.init();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Button variant=\"contained\" onClick={getModInfo}>\n            kGetModInfo\n          </Button>\n          {modInfo}\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"[0x00,0x05,0x01]\"\n            variant=\"outlined\"\n            onChange={updateMessage}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          {traxMessage ? toHexString(traxMessage) : null}\n        </Grid>\n        <Grid item xs={1}>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              if (traxMessage) {\n                sendBytes(traxMessage);\n              }\n            }}\n          >\n            Send\n          </Button>\n        </Grid>\n      </Grid>\n      <div style={{ width: \"100%\", whiteSpace: \"pre-line\" }}>\n        {dataRef.current?.buffer\n          .reverse()\n          .map((message) => {\n            return toHexString(message);\n          })\n          .join(\"\\n\")}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeByteBuffer = exports.deserializeWireMessage = exports.deserializeBlob = exports.makeBusMessageFromBuffer = exports.makeBusMessageFromJsonObject = exports.BusMessageType = exports.BusMessage = void 0;\nconst bytebuffer_1 = __importDefault(require(\"bytebuffer\"));\nclass BusMessage extends bytebuffer_1.default {\n}\nexports.BusMessage = BusMessage;\nvar BusMessageType;\n(function (BusMessageType) {\n    BusMessageType[BusMessageType[\"BUS_MESSAGE_TYPES_BEGIN\"] = 100] = \"BUS_MESSAGE_TYPES_BEGIN\";\n    BusMessageType[BusMessageType[\"Json\"] = 101] = \"Json\";\n    BusMessageType[BusMessageType[\"Buffer\"] = 102] = \"Buffer\";\n    BusMessageType[BusMessageType[\"BUS_MESSAGE_TYPES_END\"] = 103] = \"BUS_MESSAGE_TYPES_END\";\n})(BusMessageType = exports.BusMessageType || (exports.BusMessageType = {}));\n// BusMessage\n// Int32 busMessageType\n// IString channel (UInt32 prefixed UTF-8 string)\n// [unknown] contents (type depends on busMessageType, e.g. Json string, ArrayBuffer, etc.)\nconst makeBusMessageFromJsonObject = (channel, object) => {\n    return new bytebuffer_1.default()\n        .writeUint32(BusMessageType.Json)\n        .writeIString(channel)\n        .writeIString(JSON.stringify(object));\n};\nexports.makeBusMessageFromJsonObject = makeBusMessageFromJsonObject;\nconst makeBusMessageFromBuffer = (channel, buffer) => {\n    const busMessageBuffer = new bytebuffer_1.default()\n        .writeUint32(BusMessageType.Buffer)\n        .writeIString(channel)\n        .append(buffer)\n        .flip()\n        .toBuffer();\n    return busMessageBuffer;\n};\nexports.makeBusMessageFromBuffer = makeBusMessageFromBuffer;\nconst deserializeBlob = async (input) => {\n    const arrayBuffer = await input.arrayBuffer();\n    const bb = new bytebuffer_1.default(arrayBuffer.byteLength);\n    new Uint8Array(arrayBuffer).forEach((byte) => {\n        bb.writeUint8(byte);\n    });\n    bb.flip();\n    return (0, exports.deserializeByteBuffer)(bb);\n};\nexports.deserializeBlob = deserializeBlob;\nconst deserializeWireMessage = (input) => {\n    if (input instanceof ArrayBuffer) {\n        const bb = new bytebuffer_1.default(input.byteLength);\n        new Uint8Array(input).forEach((byte) => {\n            bb.writeUint8(byte);\n        });\n        bb.flip();\n        return (0, exports.deserializeByteBuffer)(bb);\n    }\n    else {\n        const bb = new bytebuffer_1.default(input.byteLength);\n        bb.buffer = input;\n        return (0, exports.deserializeByteBuffer)(bb);\n    }\n};\nexports.deserializeWireMessage = deserializeWireMessage;\nconst deserializeByteBuffer = (busMessage) => {\n    const busMessageType = busMessage.readInt32();\n    if (busMessageType <= BusMessageType.BUS_MESSAGE_TYPES_BEGIN ||\n        busMessageType >= BusMessageType.BUS_MESSAGE_TYPES_END) {\n        throw `unknown busMessageType ${busMessageType}: ${busMessage}`;\n    }\n    const channel = busMessage.readIString();\n    let contents = undefined;\n    switch (busMessageType) {\n        case BusMessageType.Json:\n            contents = JSON.parse(busMessage.readIString());\n            break;\n        case BusMessageType.Buffer:\n            contents = busMessage.buffer.slice(busMessage.offset);\n            break;\n    }\n    return { channel, busMessageType, contents };\n};\nexports.deserializeByteBuffer = deserializeByteBuffer;\n//# sourceMappingURL=busMessage.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NstrumentaClient = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst shared_1 = require(\"../shared\");\nconst busMessage_1 = require(\"./busMessage\");\nconst DEFAULT_HOST_PORT = 8088;\nclass NstrumentaClient {\n    constructor({ apiKey, wsUrl }) {\n        this.host = new URL(`ws://localhost:${DEFAULT_HOST_PORT}`);\n        this.ws = null;\n        this.apiKey = apiKey;\n        this.listeners = new Map();\n        this.subscriptions = new Map();\n        this.host = new URL(wsUrl ? wsUrl : this.host);\n        this.subscribe = this.subscribe.bind(this);\n        this.init = this.init.bind(this);\n    }\n    async init(nodeWebSocket) {\n        const headers = {\n            'x-api-key': this.apiKey,\n            'Content-Type': 'application/json',\n        };\n        axios_1.default.get(shared_1.endpoints.GET_TOKEN, {\n            headers,\n        }).then((res) => {\n            console.log('getToken', res);\n        });\n        this.ws = nodeWebSocket ? new nodeWebSocket(this.host) : new WebSocket(this.host);\n        this.ws.addEventListener('open', () => {\n            var _a;\n            console.log(`client websocket opened <${this.host}>`);\n            (_a = this.listeners.get('open')) === null || _a === void 0 ? void 0 : _a.forEach((callback) => callback());\n        });\n        this.ws.addEventListener('close', () => {\n            var _a;\n            (_a = this.listeners.get('close')) === null || _a === void 0 ? void 0 : _a.forEach((callback) => callback());\n            console.log(`client websocket closed <${this.host}>`);\n        });\n        // messages from nstrumenta web app\n        this.ws.addEventListener('message', async (e) => {\n            var _a;\n            try {\n                const { channel, contents } = typeof Blob !== 'undefined' && e.data instanceof Blob\n                    ? await (0, busMessage_1.deserializeBlob)(e.data)\n                    : (0, busMessage_1.deserializeWireMessage)(e.data);\n                (_a = this.subscriptions.get(channel)) === null || _a === void 0 ? void 0 : _a.forEach((callback) => {\n                    callback(contents);\n                });\n            }\n            catch (e) {\n                console.error('nstrumenta client message error', e);\n            }\n        });\n    }\n    send(channel, message) {\n        var _a;\n        //buffer to handle messages before initial connection with parent\n        console.log('sandbox-client send', channel, message);\n        (_a = this.ws) === null || _a === void 0 ? void 0 : _a.send((0, busMessage_1.makeBusMessageFromJsonObject)(channel, message).buffer);\n    }\n    sendBuffer(channel, buffer) {\n        var _a;\n        //buffer to handle messages before initial connection with parent\n        console.log('sandbox-client sendBuffer', channel, buffer);\n        (_a = this.ws) === null || _a === void 0 ? void 0 : _a.send((0, busMessage_1.makeBusMessageFromBuffer)(channel, buffer));\n    }\n    subscribe(channel, callback) {\n        var _a;\n        console.log(`Nstrumenta client subscribe <${channel}>`);\n        const channelSubscriptions = this.subscriptions.get(channel) || [];\n        channelSubscriptions.push(callback);\n        this.subscriptions.set(channel, channelSubscriptions);\n        (_a = this.ws) === null || _a === void 0 ? void 0 : _a.send((0, busMessage_1.makeBusMessageFromJsonObject)('_command', { command: 'subscribe', channel }).buffer);\n    }\n    addListener(eventType, callback) {\n        if (!this.listeners.get(eventType)) {\n            this.listeners.set(eventType, []);\n        }\n        const listenerCallbacks = this.listeners.get(eventType);\n        if (listenerCallbacks) {\n            listenerCallbacks.push(callback);\n        }\n    }\n}\nexports.NstrumentaClient = NstrumentaClient;\n//# sourceMappingURL=client.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.endpoints = exports.NstrumentaClient = exports.makeBusMessageFromJsonObject = exports.deserializeWireMessage = exports.deserializeBlob = exports.BusMessage = void 0;\nvar busMessage_1 = require(\"./busMessage\");\nObject.defineProperty(exports, \"BusMessage\", { enumerable: true, get: function () { return busMessage_1.BusMessage; } });\nObject.defineProperty(exports, \"deserializeBlob\", { enumerable: true, get: function () { return busMessage_1.deserializeBlob; } });\nObject.defineProperty(exports, \"deserializeWireMessage\", { enumerable: true, get: function () { return busMessage_1.deserializeWireMessage; } });\nObject.defineProperty(exports, \"makeBusMessageFromJsonObject\", { enumerable: true, get: function () { return busMessage_1.makeBusMessageFromJsonObject; } });\nvar client_1 = require(\"./client\");\nObject.defineProperty(exports, \"NstrumentaClient\", { enumerable: true, get: function () { return client_1.NstrumentaClient; } });\nconst BASE_URL = process.env.LOCAL ? 'http://localhost:8080/' : 'https://us-central1-macro-coil-194519.cloudfunctions.net/';\nexports.endpoints = {\n    GET_MACHINES: `${BASE_URL}/getMachines`,\n    GET_SIGNED_UPLOAD_URL: `${BASE_URL}/getSignedUploadUrl`,\n    GET_TOKEN: `${BASE_URL}/getToken`,\n    VERIFY_TOKEN: `${BASE_URL}/verifyToken`,\n};\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}